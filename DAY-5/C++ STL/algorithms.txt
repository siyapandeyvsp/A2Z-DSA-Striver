//for sorting
// __builtin_popcount
//next_permutation
#include<bits/stdc++.h>
using namespace std;

int main() {
    int a[5];
  a[] = {304,55,46,75,78};
  sort(a,a+4);
  vector <int> v;
  v.push_back(34);
  v.push_back (55);
  sort(v.begin(),v.end());
  sort (a+2 , a+4);//to sort a portion
  //not map all vector and array

sort(a,a+4,greater<int>);//sort in descending
pair<int,int> a[]={{1,2},{2,1},{4,1}};
//sort acc to 2nd ele increasng
//if 2nd is same then sort acc to first but in descending
sort(a,a+4.comp);//comp is a self written comparator ie a boolean comparator
bool comp(pair<int,int> p1, pair<int,int>p2){
    if (p1.second < p2.second)  return true;
    if (p1.second > p2.second) retrun false;
    //they are same 
    if (p1.first > p2.first) return true;
    return false;
}



   int num=7;
   //binary of 7=111 has 3 bits as 1  total 32 bits 000000....111 how many set bits ? 3 
   int cnt = __builtin_popcount();
   
   long long  num = 16586786787;
   int cnt =__builtin_popcountll();
   
   string s="123";
   do {
       cout <<s <<endl;
       
   }while (next_permutation(s.begin(),s.end()));
   // eg 123 213 312... and so on
   
   // max elemtn and min element 
   int maxi = *max_element (a,a+n);
   

    return 0;
}